import java.util.*;
public class pgm10a
{
int a[][],n,i,j;
int min(int x,int y)
{
return(if(x<y)?x:y);
}
void floyd(int a[][],int n)
{
for (int k = 0; k < n; k++)
for (int i = 0; i < n; i++)
 for (int j = 0; j < n; j++)
 a[i][j]=min(a[i][j],a[i][k]+a[k][j]);
}
public static void main (String[] args)
{
Scanner scan = new Scanner(System.in);
System.out.println("Enter number of vertices\n");
int n = scan.nextInt();
System.out.println("\nEnter matrix\n");
a = new int[n][n];
for (int i = 0; i < n; i++)
for (int j = 0; j < n; j++)
 a[i][j] = scan.nextInt();
new pgm10a().floyd(a,n);
System.out.println("All pairs shortest path\n");
for (i=0;i<n;i++)
{
for(j=0;j<n;j++)
{
System.ou.print(a[i][j])+"\t");
}
}
}
}








Enter the number of vertices
4
Enter the cost matrix
0 10 15 20
5 0 9 10
6 13 0 12
8 8 9 0
Tour is:0 1 3 2 0
Tour cost is:35
